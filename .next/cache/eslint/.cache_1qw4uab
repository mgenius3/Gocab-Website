[{"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/404.js":"1","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/_app.js":"2","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/about_us.js":"3","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Chart.js":"4","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Deposits.js":"5","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Title.js":"6","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/details.js":"7","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/index.js":"8","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/info.js":"9","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/index.js":"10","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/listItems.js":"11","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/details.js":"12","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/index.js":"13","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/info.js":"14","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/users/index.js":"15","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/users/info.js":"16","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/login.js":"17","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Chart.js":"18","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Deposits.js":"19","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Orders.js":"20","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Title.js":"21","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/index.js":"22","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/index.js":"23","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/info.js":"24","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/upload_information.js":"25","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/listItems.js":"26","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/login.js":"27","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/register.js":"28","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/index.js":"29","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Footer.js":"30","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Header.js":"31","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Main.js":"32","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/admin/Layout.js":"33","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/sub_components/inputfileupload.js":"34","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/theme.js":"35","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/unverifiedDrivers.js":"36","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/api/admin/[slug].js":"37","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/api/driver/[slug].js":"38"},{"size":1136,"mtime":1699272518843,"results":"39","hashOfConfig":"40"},{"size":140,"mtime":1698309397653,"results":"41","hashOfConfig":"40"},{"size":3385,"mtime":1699270317042,"results":"42","hashOfConfig":"40"},{"size":691,"mtime":1699891158784,"results":"43","hashOfConfig":"40"},{"size":667,"mtime":1698161041000,"results":"44","hashOfConfig":"40"},{"size":352,"mtime":1698161041000,"results":"45","hashOfConfig":"40"},{"size":6678,"mtime":1699280699307,"results":"46","hashOfConfig":"40"},{"size":5772,"mtime":1699881253615,"results":"47","hashOfConfig":"40"},{"size":4313,"mtime":1699885918311,"results":"48","hashOfConfig":"40"},{"size":8909,"mtime":1700233145852,"results":"49","hashOfConfig":"40"},{"size":2814,"mtime":1700234841642,"results":"50","hashOfConfig":"40"},{"size":2074,"mtime":1699259354667,"results":"51","hashOfConfig":"40"},{"size":5489,"mtime":1700234175803,"results":"52","hashOfConfig":"40"},{"size":4327,"mtime":1699259345152,"results":"53","hashOfConfig":"40"},{"size":5489,"mtime":1700233173531,"results":"54","hashOfConfig":"40"},{"size":4062,"mtime":1700234170239,"results":"55","hashOfConfig":"40"},{"size":4739,"mtime":1700233102537,"results":"56","hashOfConfig":"40"},{"size":1759,"mtime":1698675655285,"results":"57","hashOfConfig":"40"},{"size":667,"mtime":1698675655317,"results":"58","hashOfConfig":"40"},{"size":2248,"mtime":1699119781788,"results":"59","hashOfConfig":"40"},{"size":352,"mtime":1698675655401,"results":"60","hashOfConfig":"40"},{"size":6290,"mtime":1699286821869,"results":"61","hashOfConfig":"40"},{"size":7115,"mtime":1700233021463,"results":"62","hashOfConfig":"40"},{"size":2183,"mtime":1699127605434,"results":"63","hashOfConfig":"40"},{"size":6280,"mtime":1700233071337,"results":"64","hashOfConfig":"40"},{"size":2263,"mtime":1700234332085,"results":"65","hashOfConfig":"40"},{"size":4768,"mtime":1700232937349,"results":"66","hashOfConfig":"40"},{"size":5149,"mtime":1700232958592,"results":"67","hashOfConfig":"40"},{"size":637,"mtime":1699262239369,"results":"68","hashOfConfig":"40"},{"size":6369,"mtime":1699272852316,"results":"69","hashOfConfig":"40"},{"size":3527,"mtime":1700232788702,"results":"70","hashOfConfig":"40"},{"size":9710,"mtime":1700232869247,"results":"71","hashOfConfig":"40"},{"size":1834,"mtime":1698576225375,"results":"72","hashOfConfig":"40"},{"size":688,"mtime":1698693817257,"results":"73","hashOfConfig":"40"},{"size":419,"mtime":1698305700738,"results":"74","hashOfConfig":"40"},{"size":3706,"mtime":1699889853691,"results":"75","hashOfConfig":"40"},{"size":1027,"mtime":1699872214243,"results":"76","hashOfConfig":"40"},{"size":430,"mtime":1699879047765,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2wh1q",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/404.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/_app.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/about_us.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Chart.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Deposits.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/Title.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/details.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/index.js",["201"],[],"import * as React from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Badge from \"@mui/material/Badge\";\nimport Link from \"@mui/material/Link\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MainListItems from \"../listItems\";\nimport Head from \"next/head\";\n\nimport AllDriversInformation from \"./info\";\nimport { useRouter } from \"next/router\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://gocab.com.ng\">\n        gocab.com.ng\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = React.useState(null);\n\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n      router.push(\"/admin/login\");\n    }\n  }, [token]);\n\n  return (\n    <>\n      <Head>\n        <title>Gocab</title>\n        <link rel=\"icon\" href=\"/images/icon.png\" />\n      </Head>\n      <ThemeProvider theme={defaultTheme}>\n        <Box sx={{ display: \"flex\" }}>\n          <CssBaseline />\n          <AppBar position=\"absolute\" open={open}>\n            <Toolbar\n              sx={{\n                pr: \"24px\", // keep right padding when drawer closed\n              }}\n            >\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                sx={{\n                  marginRight: \"36px\",\n                  ...(open && { display: \"none\" }),\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                sx={{ flexGrow: 1 }}\n              >\n                {user?.name} - Admin Dashboard (Drivers)\n              </Typography>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer variant=\"permanent\" open={open}>\n            <Toolbar\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                px: [1],\n              }}\n            >\n              <IconButton onClick={toggleDrawer}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </Toolbar>\n            <Divider />\n            <List component=\"nav\">\n              <MainListItems />\n              <Divider sx={{ my: 1 }} />\n              {/* {secondaryListItems} */}\n            </List>\n          </Drawer>\n          <Box\n            component=\"main\"\n            sx={{\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"light\"\n                  ? theme.palette.grey[100]\n                  : theme.palette.grey[900],\n              flexGrow: 1,\n              height: \"100vh\",\n              overflow: \"auto\",\n            }}\n          >\n            <Toolbar />\n            <AllDriversInformation />\n          </Box>\n        </Box>\n      </ThemeProvider>\n    </>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/drivers/info.js",["202"],[],"import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\nimport { useRouter } from \"next/router\";\nimport { decode } from \"jsonwebtoken\";\nimport { jwtDecode } from \"jwt-decode\";\nimport DriverInfoList from \"./details\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 100 },\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n\n  {\n    id: \"address\",\n    label: \"Address\",\n    minWidth: 100,\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"phone\",\n    label: \"Phone Number\",\n    minWidth: 100,\n  },\n];\n\nexport default function AllDriversInformation() {\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n\n  const api = new FetchApiClient(\"/admin\", token);\n  const router = useRouter();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [driversData, setDriversData] = React.useState(null);\n  const [driverData, setDriverData] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const fetchDriverInfo = async () => {\n    try {\n      let { error, response } = await api.get(\"/all_drivers\");\n      if (error) throw new Error(error);\n      else setDriversData(response);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n      fetchDriverInfo();\n    } catch (err) {\n      console.log(err);\n      router.push(\"/admin/login\");\n    }\n  }, [token]);\n\n  ///MODAL\n  const [open, setOpen] = React.useState(false);\n  const handleOpeDriverModal = (data) => {\n    setDriverData(data);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow style={{ background: \"black\" }}>\n                {columns.map((column) => (\n                  <TableCell key={column.id} style={{ minWidth: \"100\" }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {driversData &&\n                driversData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((driverData, i) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={i}\n                        onClick={() => handleOpeDriverModal(driverData)}\n                      >\n                        <TableCell>{driverData.name}</TableCell>\n                        <TableCell>{driverData.email}</TableCell>\n                        <TableCell>{driverData.address}</TableCell>\n                        <TableCell>{driverData.phone}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={driversData?.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n      {driverData && (\n        <DriverInfoList\n          open={open}\n          driverData={driverData}\n          handleClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/index.js",["203"],[],"import * as React from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Badge from \"@mui/material/Badge\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Link from \"@mui/material/Link\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MainListItems from \"./listItems\";\nimport FetchApiClient from \"../../../fetch_api_clients/api\";\n\nimport Chart from \"./Chart\";\nimport Deposits from \"./Deposits\";\nimport UnverifiedDrivers from \"./unverifiedDrivers\";\nimport { useRouter } from \"next/router\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Title from \"./Title\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://gocab.com.ng\">\n        gocab.com.ng\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n  const [usersData, setUsersData] = React.useState(null);\n  const [driversData, setDriversData] = React.useState(null);\n\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const router = useRouter();\n  const [user, setUser] = React.useState(null);\n\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n  const api = new FetchApiClient(\"/admin\", token);\n\n  const fetchDriverInfo = async () => {\n    try {\n      let { error, response } = await api.get(\"/all_drivers\");\n      if (error) throw new Error(error);\n      else setDriversData(response);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const fetchUsersInfo = async () => {\n    try {\n      let { error, response } = await api.get(\"/all_users\");\n      if (error) throw new Error(error);\n      else setUsersData(response);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n      fetchDriverInfo();\n      fetchUsersInfo();\n    } catch (err) {\n      router.push(\"https://gocab.vercel.app/admin/login\");\n    }\n  }, [token]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {user?.name} - Admin Dashboard\n            </Typography>\n            {/* <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            <MainListItems />\n            <Divider sx={{ my: 1 }} />\n            {/* {secondaryListItems} */}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={6}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: \"auto\",\n                  }}\n                >\n                  <Chart\n                    no_of_users={usersData?.length}\n                    no_of_drivers={driversData?.length}\n                  />\n                </Paper>\n              </Grid>\n              {/* Drivers */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: 240,\n                  }}\n                >\n                  <Title>No of Drivers</Title>\n                  <Typography component=\"p\" variant=\"h1\">\n                    {driversData?.length}\n                  </Typography>\n\n                  <div>\n                    <Link color=\"primary\" href=\"/admin/dashboard/drivers\">\n                      drivers dashboard\n                    </Link>\n                  </div>\n                </Paper>\n              </Grid>\n\n              {/* Drivers */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: 240,\n                  }}\n                >\n                  <Title>No of Users</Title>\n                  <Typography component=\"p\" variant=\"h1\">\n                    {usersData?.length}\n                  </Typography>\n\n                  <div>\n                    <Link color=\"primary\" href=\"/admin/dashboard/users\">\n                      users dashboard\n                    </Link>\n                  </div>\n                </Paper>\n              </Grid>\n              {/* Recent UnverifiedDrivers */}\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\n                  <Title>Unverified Drivers</Title>\n\n                  <UnverifiedDrivers driversData={driversData} />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/listItems.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/details.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/index.js",["204"],[],"import * as React from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Badge from \"@mui/material/Badge\";\nimport Link from \"@mui/material/Link\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MainListItems from \"../listItems\";\n\nimport AllDriversInformation from \"./info\";\nimport { useRouter } from \"next/router\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://gocab.com.ng\">\n        gocab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = React.useState(null);\n\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n      router.push(\"https://gocab.vercel.app/admin/login\");\n    }\n  }, [token]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {user?.name} - Admin Dashboard (Messages)\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            <MainListItems />\n            <Divider sx={{ my: 1 }} />\n            {/* {secondaryListItems} */}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <AllDriversInformation />\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/reports/info.js",["205"],[],"import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\nimport { useRouter } from \"next/router\";\nimport { decode } from \"jsonwebtoken\";\nimport { jwtDecode } from \"jwt-decode\";\nimport ReportInfoList from \"./details\";\n\nconst columns = [\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n\n  {\n    id: \"subject\",\n    label: \"Subject\",\n    minWidth: 100,\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"message\",\n    label: \"Messages\",\n    minWidth: 100,\n  },\n];\n\nfunction createData(name, email, address, phone) {\n  return { name, email, address, phone };\n}\n\nexport default function AllReportsInformation() {\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n\n  const api = new FetchApiClient(\"/admin\", token);\n  const router = useRouter();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [reportsData, setreportsData] = React.useState(null);\n  const [reportData, setreportData] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const fetchreportInfo = async () => {\n    try {\n      let { error, response } = await api.get(\"/all_reports\");\n      console.log(response);\n      if (error) throw new Error(error);\n      else setreportsData(response);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n      fetchreportInfo();\n    } catch (err) {\n      console.log(err);\n      router.push(\"/admin/login\");\n    }\n  }, [token]);\n\n  ///MODAL\n  const [open, setOpen] = React.useState(false);\n  const handleOpenReportModal = (data) => {\n    setreportData(data);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow style={{ background: \"black\" }}>\n                {columns.map((column) => (\n                  <TableCell key={column.id} style={{ minWidth: \"100\" }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {reportsData &&\n                reportsData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((reportData, i) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={i}\n                        onClick={() => handleOpenReportModal(reportData)}\n                      >\n                        <TableCell>{reportData.email}</TableCell>\n                        <TableCell>{reportData.subject}</TableCell>\n                        <TableCell>{reportData.message}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={reportsData?.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n      {reportData && (\n        <ReportInfoList\n          open={open}\n          reportData={reportData}\n          handleClose={handleClose}\n        />\n      )}\n    </>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/users/index.js",["206"],[],"import * as React from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Badge from \"@mui/material/Badge\";\nimport Link from \"@mui/material/Link\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MainListItems from \"../listItems\";\n\nimport AllUsersInformation from \"./info\";\nimport { useRouter } from \"next/router\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://gocab.com.ng\">\n        gocab.com.ng\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const router = useRouter();\n  const [user, setUser] = React.useState(null);\n\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n      router.push(\"https://gocab.vercel.app/admin/login\");\n    }\n  }, [token]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {user?.name} - Admin Dashboard(Users)\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            <MainListItems />\n            <Divider sx={{ my: 1 }} />\n            {/* {secondaryListItems} */}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <AllUsersInformation />\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/users/info.js",["207"],[],"import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\nimport { useRouter } from \"next/router\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 100 },\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n\n  {\n    id: \"address\",\n    label: \"Address\",\n    minWidth: 100,\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"phone\",\n    label: \"Phone Number\",\n    minWidth: 100,\n  },\n];\n\nexport default function AllUsersInformation() {\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"adminToken\");\n    }\n  });\n\n  const api = new FetchApiClient(\"/admin\", token);\n  const router = useRouter();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [usersData, setUsersData] = React.useState(null);\n  const [userData, setUserData] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const fetchUsersInfo = async () => {\n    try {\n      let { error, response } = await api.get(\"/all_users\");\n      if (error) throw new Error(error);\n      else setUsersData(response);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n      fetchUsersInfo();\n    } catch (err) {\n      console.log(err);\n      router.push(\"https://gocab.vercel.app/admin/login\");\n    }\n  }, [token]);\n\n  ///MODAL\n  const [open, setOpen] = React.useState(false);\n  const handleOpeDriverModal = (data) => {\n    setUserData(data);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow style={{ background: \"black\" }}>\n                {columns.map((column) => (\n                  <TableCell key={column.id} style={{ minWidth: \"100\" }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {usersData &&\n                usersData\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((userData, i) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={i}\n                        onClick={() => handleOpeDriverModal(userData)}\n                      >\n                        <TableCell>{userData.name}</TableCell>\n                        <TableCell>{userData.email}</TableCell>\n                        <TableCell>{userData.address}</TableCell>\n                        <TableCell>{userData.phone}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={usersData?.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/login.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Chart.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Deposits.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Orders.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/Title.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/index.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/index.js",["208"],[],"import * as React from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Badge from \"@mui/material/Badge\";\nimport Link from \"@mui/material/Link\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MainListItems from \"../listItems\";\nimport Head from \"next/head\";\n\nimport { initializeApp } from \"firebase/app\";\n\nimport firebaseConfig from \"../../../../configdb/db\";\n\n// import storage from \"firebase/storage\"; // Import your Firebase configuration\nimport { getDatabase, ref, set, onValue } from \"firebase/database\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useRouter } from \"next/router\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport DriverInfoTable from \"./info\";\nimport UploadInformation from \"./upload_information\";\n\nimport {\n  Button,\n  Container,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormLabel,\n} from \"@mui/material\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        gocab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n  const [driverInfo, setDriverInfo] = React.useState(null);\n  const router = useRouter();\n  const [open, setOpen] = React.useState(true);\n  const [user, setUser] = React.useState(true);\n  const [token] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"userToken\");\n    }\n  });\n\n  const app = initializeApp(firebaseConfig);\n  const db = getDatabase(app);\n\n  const fetchDriverInfo = (uid) => {\n    const driversRef = ref(db, `drivers/${uid}`);\n\n    onValue(driversRef, (snapshot) => {\n      const data = snapshot.val();\n\n      if (data.information) {\n        console.log(data);\n        // const driverInfoArray = Object.keys(data).map((key) => ({\n        //   id: key,\n        //   ...data[key],\n        // }));\n        console.log(data.information);\n        setDriverInfo(data.information);\n      } else setDriverInfo(\"no information\");\n    });\n  };\n\n  React.useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n      fetchDriverInfo(decoded?.uid);\n    } catch (err) {\n      router.push(\"https://gocab.vercel.app/driver/login\");\n    }\n  }, [token]);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    // <PageAuthentication url=\"/driver/login\">\n    <ThemeProvider theme={defaultTheme}>\n      <Head>\n        <title>information</title>\n        <link rel=\"icon\" href=\"/images/icon.png\" />\n      </Head>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {user?.name} - Dashboard\n            </Typography>\n            {/* <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            <MainListItems />\n            <Divider sx={{ my: 1 }} />\n            {/* {secondaryListItems} */}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          {driverInfo && driverInfo !== \"no information\" ? (\n            <DriverInfoTable driverInfo={driverInfo} />\n          ) : (\n            <UploadInformation user={user} />\n          )}\n        </Box>\n        <ToastContainer position=\"bottom-center\" />\n      </Box>\n    </ThemeProvider>\n    // </PageAuthentication>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/info.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/information/upload_information.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/dashboard/listItems.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/login.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/driver/register.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/index.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Footer.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Header.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/Main.js",["209","210","211","212","213","214","215","216","217","218"],[],"import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // Import carousel styles\nimport { Carousel } from \"react-responsive-carousel\";\nimport Image from \"next/image\";\nimport { ImageSlideshow } from \"../helper/helper\";\nimport Link from \"next/link\";\n\nexport default function Main() {\n  const images = [\n    \"/images/gimage1.jpg\",\n    \"/images/home_display1.jpeg\",\n    \"/images/gimage5.png\",\n  ];\n  const gocab_images = [\n    \"/images/gimage1.jpg\",\n    \"/images/gimage3.png\",\n    \"/images/home_display2.jpeg\",\n  ];\n  return (\n    <section className=\"text-gray-600 body-font\">\n      <div className=\"container mx-auto flex mt-20 pt-10 md:flex-row md:justify-center items-center flex-col md:border-b border-gray-400 mb-10\">\n        <div className=\"md:w-1/2 mx-3\">\n          <h1 className=\"mb-5 sm:text-4xl text-4xl sm:text-4xl text-blue-900 Avenir xl:w-2/2\">\n            Efficient Transport and Logistics\n          </h1>\n          <p className=\"mb-4 text-lg text-gray-600 \">\n            Gocab Efficient Transport and Logistics is your trusted partner for\n            seamless, reliable shipping solutions. We&apos;re committed to\n            ensuring your cargo reaches its destination efficiently and on time.\n          </p>\n\n          <div className=\"flex sm:flex-row flex-col items-center  md:block hidden\">\n            <a\n              className=\"inline-flex mt-2 font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"https://play.google.com/store/apps/details?id=com.logistics.gocab\"\n            >\n              {/* <span className=\"justify-center\">Find out more</span> */}\n              <Image\n                src=\"/images/play_store.png\"\n                className=\"border rounded-lg\"\n                width={200}\n                height={100}\n              />\n            </a>\n\n            <a\n              className=\"inline-flex px-1 py-1 mt-2  font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"#\"\n            >\n              {/* <span className=\"justify-center\">Apple Store</span> */}\n              <Image\n                src=\"/images/app_store.png\"\n                width={200}\n                height={100}\n                className=\"border rounded-lg\"\n              />\n            </a>\n          </div>\n        </div>\n        <ImageSlideshow images={images} style=\"md:w-1/2\" sub_image_class=\"\" />\n        <div className=\"flex sm:flex-row flex-col items-center md:hidden block\">\n          <a\n            className=\"inline-flex mt-2 font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n            href=\"https://play.google.com/store/apps/details?id=com.logistics.gocab\"\n          >\n            {/* <span className=\"justify-center\">Find out more</span> */}\n            <Image\n              src=\"/images/play_store.png\"\n              className=\"border rounded-lg\"\n              width={200}\n              height={100}\n            />\n          </a>\n\n          <a\n            className=\"inline-flex px-1 py-1 mt-2  font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n            href=\"#\"\n          >\n            {/* <span className=\"justify-center\">Apple Store</span> */}\n            <Image\n              src=\"/images/app_store.png\"\n              width={200}\n              height={100}\n              className=\"border rounded-lg\"\n            />\n          </a>\n        </div>\n      </div>\n\n      <section className=\"mx-auto container\">\n        <div className=\"flex md:flex-row flex-col-reverse items-center \">\n          <div className=\"md:w-1/2 container px-5\">\n            <img src=\"/images/driver_image.jpg\" className=\"rounded-lg w-full\" />\n            <div className=\"flex md:hidden block my-3\">\n              <Link href=\"https://gocab.vercel.app/driver/login\">\n                <p\n                  className=\"\n             bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline-blue active:bg-blue-800 cursor-pointer\n                 \"\n                >\n                  Get Started\n                </p>\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"container px-5 mx-auto  flex flex-col items-start md:w-1/2\">\n            <div className=\"flex flex-col w-full mb-4 text-left \">\n              <h1 className=\"mb-8 text-3xl Avenir font-semibold text-black\">\n                Feel free to drive at your convenience and generate the income\n                that suits your requirements.\n              </h1>\n\n              <h2 className=\"text-2xl text-gray-700\">\n                Earn income according to your timetable by providing rides,\n                making deliveries, or even combining both options. You have the\n                choice of using your own vehicle or selecting a rental from\n                Gocab\n              </h2>\n            </div>\n\n            <div className=\"flex md:block hidden\">\n              <Link href=\"https://gocab.vercel.app/driver/login\">\n                <p\n                  className=\"\n             bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline-blue active:bg-blue-800 cursor-pointer\n                 \"\n                >\n                  Get Started\n                </p>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"container pt-20 mx-auto flex md:flex-row flex-col items-center justify-between\">\n        <div>\n          <h1 className=\"mb-8 text-4xl Avenir font-semibold text-gray-900 md:text-left text-center\">\n            Download our Apps\n          </h1>\n          <h1 className=\"mb-8 text-2xl Avenir font-semibold text-gray-600 md:text-left text-center\">\n            Your ride and logistics request, will be settled in minutes\n          </h1>\n\n          <div className=\"flex justify-center md:block hidden\" id=\"download\">\n            <a\n              className=\"inline-flex mt-2 font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"https://play.google.com/store/apps/details?id=com.logistics.gocab\"\n            >\n              {/* <span className=\"justify-center\">Find out more</span> */}\n              <Image\n                src=\"/images/play_store.png\"\n                className=\"border rounded-lg\"\n                width={200}\n                height={100}\n              />\n            </a>\n\n            <a\n              className=\"inline-flex px-1 py-1 mt-2 font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"#\"\n            >\n              {/* <span className=\"justify-center\">Apple Store</span> */}\n              <Image\n                src=\"/images/app_store.png\"\n                width={200}\n                height={100}\n                className=\"border rounded-lg\"\n              />\n            </a>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col items-center justify-center align-content-center mx-auto rounded-lg mb-20\">\n          <ImageSlideshow\n            images={gocab_images}\n            style=\" transform hover:scale-110 transition-transform duration-100 ease-in-out\"\n            sub_image_class=\"md:mb-0 py-3 md:w-2/4 w-4/5 mx-auto text-center mx-auto rounded-lg\"\n          />\n\n          <div className=\"flex justify-center md:hidden block my-8 w-5/6\">\n            <a\n              className=\"inline-flex font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"https://play.google.com/store/apps/details?id=com.logistics.gocab\"\n            >\n              {/* <span className=\"justify-center\">Find out more</span> */}\n              <Image\n                src=\"/images/play_store.png\"\n                className=\"border rounded-lg\"\n                width={200}\n                height={100}\n              />\n            </a>\n\n            <a\n              className=\"inline-flex font-medium text-black transition duration-500 ease-in-out transform bg-transparent bg-gray-900\"\n              href=\"#\"\n            >\n              {/* <span className=\"justify-center\">Apple Store</span> */}\n              <Image\n                src=\"/images/app_store.png\"\n                width={200}\n                height={100}\n                className=\"border rounded-lg\"\n              />\n            </a>\n          </div>\n        </div>\n      </div>\n      {/* <section className=\"relative\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 text-center\">\n          <div className=\"py-24 md:py-36\">\n            <h1 className=\"mb-5 text-6xl Avenir font-semibold text-gray-900\">\n              Subscribe to our newsletter\n            </h1>\n            <h1 className=\"mb-9 text-2xl font-semibold text-gray-600\">\n              Enter your email address and get our newsletters straight away.\n            </h1>\n            <input\n              placeholder=\"jack@example.com\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              className=\"border border-gray-600 w-1/4 pr-2 pl-2 py-3 mt-2 rounded-md text-gray-800 font-semibold hover:border-gray-900\"\n            ></input>{\" \"}\n            <a\n              className=\"inline-flex items-center px-14 py-3 mt-2 ml-2 font-medium text-white transition duration-500 ease-in-out transform bg-transparent border rounded-lg bg-gray-900\"\n              href=\"/\"\n            >\n              <span className=\"justify-center\">Subscribe</span>\n            </a>\n          </div>\n        </div>\n      </section> */}\n    </section>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/admin/Layout.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/sub_components/inputfileupload.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/components/theme.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/admin/dashboard/unverifiedDrivers.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/api/admin/[slug].js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/gocab/pages/api/driver/[slug].js",[],[],{"ruleId":"219","severity":1,"message":"220","line":113,"column":6,"nodeType":"221","endLine":113,"endColumn":13,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":76,"column":6,"nodeType":"221","endLine":76,"endColumn":13,"suggestions":"224"},{"ruleId":"219","severity":1,"message":"225","line":145,"column":6,"nodeType":"221","endLine":145,"endColumn":13,"suggestions":"226"},{"ruleId":"219","severity":1,"message":"220","line":112,"column":6,"nodeType":"221","endLine":112,"endColumn":13,"suggestions":"227"},{"ruleId":"219","severity":1,"message":"228","line":80,"column":6,"nodeType":"221","endLine":80,"endColumn":13,"suggestions":"229"},{"ruleId":"219","severity":1,"message":"220","line":113,"column":6,"nodeType":"221","endLine":113,"endColumn":13,"suggestions":"230"},{"ruleId":"219","severity":1,"message":"231","line":74,"column":6,"nodeType":"221","endLine":74,"endColumn":13,"suggestions":"232"},{"ruleId":"219","severity":1,"message":"223","line":154,"column":6,"nodeType":"221","endLine":154,"endColumn":13,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":37,"column":15,"nodeType":"236","endLine":42,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":50,"column":15,"nodeType":"236","endLine":55,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":66,"column":13,"nodeType":"236","endLine":71,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":79,"column":13,"nodeType":"236","endLine":84,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":92,"column":13,"nodeType":"236","endLine":92,"endColumn":81},{"ruleId":"234","severity":1,"message":"239","line":92,"column":13,"nodeType":"236","endLine":92,"endColumn":81},{"ruleId":"234","severity":1,"message":"235","line":150,"column":15,"nodeType":"236","endLine":155,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":163,"column":15,"nodeType":"236","endLine":168,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":186,"column":15,"nodeType":"236","endLine":191,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":199,"column":15,"nodeType":"236","endLine":204,"endColumn":17},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["240"],"React Hook React.useEffect has missing dependencies: 'fetchDriverInfo' and 'router'. Either include them or remove the dependency array.",["241"],"React Hook React.useEffect has missing dependencies: 'fetchDriverInfo', 'fetchUsersInfo', and 'router'. Either include them or remove the dependency array.",["242"],["243"],"React Hook React.useEffect has missing dependencies: 'fetchreportInfo' and 'router'. Either include them or remove the dependency array.",["244"],["245"],"React Hook React.useEffect has missing dependencies: 'fetchUsersInfo' and 'router'. Either include them or remove the dependency array.",["246"],["247"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"248","fix":"254"},{"desc":"255","fix":"256"},{"desc":"248","fix":"257"},{"desc":"258","fix":"259"},{"desc":"250","fix":"260"},"Update the dependencies array to be: [router, token]",{"range":"261","text":"262"},"Update the dependencies array to be: [fetchDriverInfo, router, token]",{"range":"263","text":"264"},"Update the dependencies array to be: [fetchDriverInfo, fetchUsersInfo, router, token]",{"range":"265","text":"266"},{"range":"267","text":"262"},"Update the dependencies array to be: [fetchreportInfo, router, token]",{"range":"268","text":"269"},{"range":"270","text":"262"},"Update the dependencies array to be: [fetchUsersInfo, router, token]",{"range":"271","text":"272"},{"range":"273","text":"264"},[3341,3348],"[router, token]",[2174,2181],"[fetchDriverInfo, router, token]",[4329,4336],"[fetchDriverInfo, fetchUsersInfo, router, token]",[3328,3335],[2249,2256],"[fetchreportInfo, router, token]",[3334,3341],[2103,2110],"[fetchUsersInfo, router, token]",[4507,4514]]